// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using UdrugeApp.DataAccess.SqlServer.Data.DbModels;

namespace UdrugeApp.DataAccess.SqlServer.Data
{
    public partial class UdrugeContext : DbContext
    {
        public UdrugeContext()
        {
        }

        public UdrugeContext(DbContextOptions<UdrugeContext> options)
            : base(options)
        {
        }

        public virtual DbSet<PotrosniResursi> PotrosniResursi { get; set; }
        public virtual DbSet<Prostori> Prostori { get; set; }
        public virtual DbSet<Resursi> Resursi { get; set; }
        public virtual DbSet<TrajniResursi> TrajniResursi { get; set; }
        public virtual DbSet<Udruge> Udruge { get; set; }
        public virtual DbSet<VoditeljiUdruge> VoditeljiUdruge { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PotrosniResursi>(entity =>
            {
                entity.Property(e => e.IdResursa).ValueGeneratedNever();

                entity.HasOne(d => d.IdResursaNavigation)
                    .WithOne(p => p.PotrosniResursi)
                    .HasForeignKey<PotrosniResursi>(d => d.IdResursa)
                    .HasConstraintName("FK_PotrosniResursi_Resursi");
            });

            modelBuilder.Entity<Prostori>(entity =>
            {
                entity.HasOne(d => d.IdUdrugeNavigation)
                    .WithMany(p => p.Prostori)
                    .HasForeignKey(d => d.IdUdruge)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("regBrojUdruge");
            });

            modelBuilder.Entity<Resursi>(entity =>
            {
                entity.HasOne(d => d.IdProstorNavigation)
                    .WithMany(p => p.Resursi)
                    .HasForeignKey(d => d.IdProstor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Prostori_Resursi");

                entity.HasOne(d => d.IdUdrugeNavigation)
                    .WithMany(p => p.Resursi)
                    .HasForeignKey(d => d.IdUdruge)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Udruge_Resursi");
            });

            modelBuilder.Entity<TrajniResursi>(entity =>
            {
                entity.Property(e => e.IdResursa).ValueGeneratedNever();

                entity.Property(e => e.InventarniBroj).IsFixedLength();

                entity.HasOne(d => d.IdResursaNavigation)
                    .WithOne(p => p.TrajniResursi)
                    .HasForeignKey<TrajniResursi>(d => d.IdResursa)
                    .HasConstraintName("FK_TrajniResursi_Resursi");
            });

            modelBuilder.Entity<Udruge>(entity =>
            {
                entity.Property(e => e.Oib).IsFixedLength();
            });

            modelBuilder.Entity<VoditeljiUdruge>(entity =>
            {
                entity.HasKey(e => new { e.IdClan, e.IdUdruge });

                entity.HasOne(d => d.IdUdrugeNavigation)
                    .WithMany(p => p.VoditeljiUdruge)
                    .HasForeignKey(d => d.IdUdruge)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_VoditeljiUdruge_Udruge");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}